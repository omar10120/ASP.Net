@page "/"
@using Microsoft.AspNetCore.Authorization
@inject NavigationManager Navigation
@using ForFIll.Models;
@inject ISnackbar Snackbar
@inject ProductService ProductService
@using Microsoft.EntityFrameworkCore

@using ForFIll.Data
@using MudBlazor
@using Microsoft.AspNetCore.Components.Authorization
@rendermode InteractiveServer


@inject ApplicationDbContext DbContext
@inject AppState AppState



@if (databases == null)
{
    <MudLink OnClick="NavigateDatabasemanagment" Href="database-management" Typo="Typo.body2">
        Create Database
        @if (loadding1 == true)
        {
            <MudProgressCircular Class="mx-2" Color="Color.Primary" Size="Size.Small" Indeterminate="true" />
        }
    </MudLink>
}
<PageTitle>Home</PageTitle>

<h1>
    Hello, My Best User  @if (visible == true)
    {
        <Loadding />
    }
</h1>

<CascadingAuthenticationState>
    <AuthorizeView>
        <Authorized>
            <MudText Typo="Typo.h6">Welcome, @context.User.Identity.Name!</MudText>
            <MudButton OnClick="NavigateToLogout" Variant="Variant.Filled" Color="Color.Primary">
                Logout
                @if (loaddingL == true)
                {
                    <MudProgressCircular Class="mx-2" Color="Color.Dark" Size="Size.Small" Indeterminate="true" />
                }
            </MudButton>
        </Authorized>
        <NotAuthorized>

            <MudText Typo="Typo.h6">
                @if (databases != null)
                {
                    <h4>
                        You are not authorized to view this page. Please.
                    </h4>
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="NavigateToLogin">
                        Signin
                        @if (loadding == true)
                        {
                            <MudProgressCircular Class="mx-2" Color="Color.Dark" Size="Size.Small" Indeterminate="true" />
                        }
                    </MudButton>
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="NavigateToLSignup">
                        Register
                        @if (loaddingR == true)
                        {
                            <MudProgressCircular Class="mx-2" Color="Color.Dark" Size="Size.Small" Indeterminate="true" />
                        }
                    </MudButton>



                }
                else
                {
                    <MudAlert Severity="Severity.Warning">You Should CreateDatabase First</MudAlert>
                }
            </MudText>
        </NotAuthorized>

    </AuthorizeView>
</CascadingAuthenticationState>



@code {
    private DateOnly date1 = DateOnly.FromDateTime(DateTime.Now.AddDays(1));

    private List<string> databases;
    private bool visible;
    private bool dataLoaded;
    private bool loadding;
    private bool loadding1;
    private bool loaddingR;
    private bool loaddingL;
    private string message;

    protected override async Task OnInitializedAsync()
    {
   
        databases = await ProductService.GetAllDatabasesAsync();
        StateHasChanged();
        if (databases == null)
        {
            try
            {
                loadding = true;
                // Apply pending migrations
                await DbContext.Database.MigrateAsync();
                message = "Migrations applied successfully.";
                loadding = false;
                StateHasChanged();

            }
            catch (Exception ex)
            {
                message = $"Error applying migrations: {ex.Message} and check Connection String";
            }
        }

    }
    private async void NavigateToLogin()
    {
        loadding = true;
        Navigation.NavigateTo("/loginform");
    }
    private async void NavigateDatabasemanagment()
    {
        loadding1 = true;

    }
    private void NavigateToLogout()
    {
        Snackbar.Add("logout Done Successflly", Severity.Success);
        loaddingL = true;

        Navigation.NavigateTo("/logout");

    }
    private void NavigateToLSignup()
    {
        loaddingR = true;

        Navigation.NavigateTo("/signup");

    }



}