@page "/login"

@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider
@using ForFIll.Models
@using MudBlazor
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@inject ISnackbar Snackbar
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@using ForFIll.Components
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Mvc;
@using ForFIll.Controllers
@inject ProductService ProductService
@using ForFIll.Data

@using System.Net.Http.Json
@inject HttpClient httpClient


@using static Microsoft.AspNetCore.Components.Web.RenderMode





@* @rendermode InteractiveServer *@


<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />



<NavLink href="Fetchdata"  class="btn btn-primary"  Match="NavLinkMatch.All">go to products list </NavLink>


@code {

    private bool _hidePosition;
    private bool _loading;
    public LoginModel loginModel = new LoginModel();
    // private string antiforgeryToken;
    public IEnumerable<User> User = new List<User>();

    protected override async Task OnInitializedAsync()
    {
        
        try
        {

            var claims = new List<Claim>
                {
                    new Claim(ClaimTypes.Name, loginModel.Username)
                };
            var claimsIdentity = new ClaimsIdentity(claims, CookieAuthenticationDefaults.AuthenticationScheme);
            var authProperties = new AuthenticationProperties
                {
                    IsPersistent = true
                };

            await HttpContextAccessor.HttpContext.SignInAsync(CookieAuthenticationDefaults.AuthenticationScheme, new ClaimsPrincipal(claimsIdentity), authProperties);
            ((CustomAuthenticationStateProvider)AuthenticationStateProvider).NotifyUserAuthentication(new ClaimsPrincipal(claimsIdentity));
            Snackbar.Add("Login Done Successflly", Severity.Success);

        }
        catch (Exception ex)
        {

            Snackbar.Add(ex.Message, Severity.Warning);

        }
    }


  

}
